package company.co.kr.myapplication;

import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class MainActivity extends AppCompatActivity {

    private static String TAG = "Testing";
    private static String URL_Reg = "test.php";
    private static String URL_Login = "login.php";


    private EditText et_id;
    private EditText et_pw;
    private EditText et_name;
    private Button btn_reg;
    private Button btn_login;

    String id = null;
    String pw = null;
    String name = null;
    String mJsonString = null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        et_id = findViewById(R.id.et_id);
        et_pw = findViewById(R.id.et_pw);
        et_name = findViewById(R.id.et_name);
        btn_reg = (Button)findViewById(R.id.btn_reg);
        btn_login = findViewById(R.id.btn_login);



        btn_reg.setOnClickListener(new View.OnClickListener(){
            public void onClick(View v){
                Register reg = new Register();
                reg.execute();
            }
        });

        btn_login.setOnClickListener(new View.OnClickListener(){
            public void onClick(View v){
                Login login = new Login();
                login.execute();
            }
        });
    }


    private class Register extends AsyncTask<Void, Void, String>{
        @Override
        protected void onPreExecute(){
            super.onPreExecute();
        }

        @Override
        protected void onPostExecute(String s){
            super.onPostExecute(s);
            String check = "success";
            System.out.println(s);
            if(s.equals(check)){ // 등록 성공
                Toast.makeText(getApplicationContext(), "회원가입 완료" , Toast.LENGTH_LONG).show();
            }
            if(s.equals("exist")){ // 아이디 중복
                Toast.makeText(getApplicationContext(), "이미 id가 존재합니다." , Toast.LENGTH_LONG).show();
            }


        }

        @Override
        protected String doInBackground(Void...param){
            id = et_id.getText().toString();
            pw = et_pw.getText().toString();
            name = et_name.getText().toString();
            String serverURL = "http://10.0.2.2/reg.php";
            String parameter = "id="+id+"&pw="+pw+"&name="+name;
            // 서버로 전달할 파라미터

            try{
                // 안드로이드 -> 서버
                URL url = new URL(serverURL);
                HttpURLConnection con = (HttpURLConnection) url.openConnection();
                con.setRequestMethod("POST");
                con.setDoInput(true);
                con.connect();

                OutputStream os = con.getOutputStream();
                os.write(parameter.getBytes());
                os.flush();
                os.close();


                // 서버 -> 안드로이드
                int status= con.getResponseCode();
                InputStream is;

                if(status == con.HTTP_OK){ // 연결이 돼었다면 서버로부터 input stream 연결
                    is = con.getInputStream();
                }else{
                    is = con.getErrorStream();
                }

                InputStreamReader isr = new InputStreamReader(is, "UTF-8"); // inputstream 을 읽음
                BufferedReader br = new BufferedReader(isr);

                StringBuilder sb = new StringBuilder();
                String line;

                while((line = br.readLine()) != null){
                    sb.append(line);
                }

                br.close();

                return sb.toString().trim();

            }catch(Exception e){
                e.printStackTrace();
                return null;
            }
        }
    }




    private class Login extends AsyncTask<Void, Void, String>{
        @Override
        protected void onPreExecute(){
            super.onPreExecute();
        }

        @Override
        protected void onPostExecute(String s){
            super.onPostExecute(s);

            String check = "success";
            System.out.println(s);
            System.out.println(s.equals(check));
            //log check
            
            String status = null;
            String jId = null;
            String jPw = null;
            String jName = null; // json파일에서 가져올 스트링들
            mJsonString = s;
            
            // jSon 처리 후 getter & setter에 저장, SharedPreference 이용 예정
            try {
                JSONObject jsonObject = new JSONObject(mJsonString);
                JSONArray jsonArray =  jsonObject.getJSONArray("testing");
                for(int i = 0 ; i < jsonArray.length();i++){
                    JSONObject item = jsonArray.getJSONObject(i);

                    status = item.getString("status");
                    jId = item.getString("id");
                    jPw = item.getString("pw");
                    jName = item.getString("name");
                }
            }catch(Exception e){
                e.printStackTrace();
            }

            System.out.println("id : " + jId + "pw: " + jPw + "name: " + jName);
            //log check

            CurrentUser user = new CurrentUser();
            if(status.equals(check)) {
                user.setId(jId);
                user.setPw(jPw);
                user.setName(jName);
            }


            System.out.println("Setter & Getter check : " + user.getId() + " " + user.getName() + " " + user.getPw());


        }

        @Override
        protected String doInBackground(Void...param){
            id = et_id.getText().toString();
            pw = et_pw.getText().toString();
            name = et_name.getText().toString();
            String serverURL = "http://10.0.2.2/login.php";
            String parameter = "id="+id+"&pw="+pw+"&name="+name;
            // 서버로 전달할 파라미터

            try{
                // 안드로이드 -> 서버
                URL url = new URL(serverURL);
                HttpURLConnection con = (HttpURLConnection) url.openConnection();
                con.setRequestMethod("POST");
                con.setDoInput(true);
                con.connect();

                OutputStream os = con.getOutputStream();
                os.write(parameter.getBytes());
                os.flush();
                os.close();


                // 서버 -> 안드로이드
                int status= con.getResponseCode();
                InputStream is;

                if(status == con.HTTP_OK){ // 연결이 돼었다면 서버로부터 input stream 연결
                    is = con.getInputStream();
                }else{
                    is = con.getErrorStream();
                }

                InputStreamReader isr = new InputStreamReader(is, "UTF-8"); // inputstream 을 읽음
                BufferedReader br = new BufferedReader(isr);

                StringBuilder sb = new StringBuilder();
                String line;

                while((line = br.readLine()) != null){
                    sb.append(line);
                }

                br.close();

                return sb.toString().trim();

            }catch(Exception e){
                e.printStackTrace();
                return null;
            }
        }
    }


}
